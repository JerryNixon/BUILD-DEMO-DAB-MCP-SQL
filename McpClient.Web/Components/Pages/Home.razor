@page "/" 
@inject McpClient.Web.Dab.DabRepository Repo

@using McpClient.Web.Dab

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<style>
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    body {
        background-color: #f8f9fa;
        font-size: 0.95rem;
    }

    .site-header {
        background-color: #0d6efd;
        color: white;
        padding: 0.75rem 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .section {
        padding: 1rem 1.5rem;
    }

    .section-customers {
        background-color: #e9f5ff;
    }

    .section-policies {
        background-color: #f5f9ec;
    }

    .section-comm {
        background-color: #fef4e9;
    }

    .card-row {
        display: flex;
        overflow-x: auto;
        gap: 0.75rem;
        padding-bottom: 0.75rem;
    }

    .card-row .card {
        min-width: 200px;
        flex-shrink: 0;
        cursor: pointer;
        transition: transform 0.2s ease;
    }

    .card-row .card:hover {
        transform: scale(1.02);
    }

    .selected {
        border: 2px solid #0d6efd;
        box-shadow: 0 0 6px #0d6efd66;
    }

    .details-panel {
        background-color: #fff;
        border-left: 4px solid #0d6efd;
        padding: 1rem 1.25rem;
        margin-top: -0.5rem;
        margin-bottom: 1rem;
    }

    .detail-row {
        display: flex;
        flex-wrap: wrap;
        margin-bottom: 0.5rem;
    }

    .detail-row strong {
        width: 150px;
        font-weight: 600;
    }

    .profile-pic-wrapper {
        position: relative;
        width: 140px;
        height: 140px;
        margin: auto;
    }

    .profile-pic {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        object-fit: cover;
        display: block;
    }

    .camera-btn {
        position: absolute;
        bottom: 0;
        right: 0;
        transform: translate(25%, 25%);
        background-color: #ffffffcc;
        border-radius: 50%;
        padding: 0.25rem 0.4rem;
        font-size: 1rem;
        border: 1px solid #ccc;
    }

    .chat-launcher {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
    }

    .chat-container {
        position: fixed;
        bottom: 80px;
        right: 20px;
        z-index: 1001;
        width: 400px;
        height: 500px;
        background: white;
        border: 1px solid #ccc;
        border-radius: 8px;
        overflow: auto;
        box-shadow: 0 2px 10px rgba(0,0,0,0.2);
        display: flex;
        flex-direction: column;
        padding: 1rem;
    }
</style>

<div class="site-header">
    <h4>Contoso Insurance</h4>
    <div class="d-flex align-items-center gap-2">
        <span>Hello, Jerry</span>
        <button class="btn btn-outline-light btn-sm">☰</button>
        <button class="btn btn-outline-light btn-sm">⚙</button>
    </div>
</div>

<main>
    <div class="section section-customers">
        <div class="d-flex justify-content-between align-items-center mb-2">
            <h6 class="mb-0">Customers</h6>
            <a href="#">New</a>
        </div>
        <div class="card-row">
            @foreach (var c in customers)
            {
                <div class="card @(selectedCustomer?.Id == c.Id ? "selected" : "")" @onclick="() => SelectCustomer(c)">
                    <div class="card-body">
                        <h6 class="card-title mb-1">@c.FirstName @c.LastName</h6>
                        <small>@c.Email</small>
                    </div>
                </div>
            }
        </div>
        @if (selectedCustomer is not null)
        {
            <div class="details-panel">
                <form>
                    <div class="row">
                        <div class="col-md-3 d-flex align-items-center">
                            <div class="profile-pic-wrapper">
                                <img src="images/@(selectedCustomer.Id).jpg" alt="Profile" class="profile-pic" />
                                <button class="btn camera-btn" type="button">📷</button>
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="row g-2">
                                <div class="col-md-4">
                                    <label class="form-label">First Name</label>
                                    <input class="form-control form-control-sm" value="@selectedCustomer.FirstName">
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">Last Name</label>
                                    <input class="form-control form-control-sm" value="@selectedCustomer.LastName">
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">Email</label>
                                    <input class="form-control form-control-sm" value="@selectedCustomer.Email">
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Address</label>
                                    <input class="form-control form-control-sm" value="@selectedCustomer.Address">
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">City</label>
                                    <input class="form-control form-control-sm" value="@selectedCustomer.City">
                                </div>
                                <div class="col-md-1">
                                    <label class="form-label">State</label>
                                    <input class="form-control form-control-sm" value="@selectedCustomer.State">
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Zip</label>
                                    <input class="form-control form-control-sm" value="@selectedCustomer.Zip">
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Country</label>
                                    <input class="form-control form-control-sm" value="@selectedCustomer.Country">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <button class="btn btn-success btn-sm" type="submit">Save Changes</button>
                        <div class="d-flex gap-2 flex-wrap">
                            <button class="btn btn-outline-primary btn-sm">Lookup Billing</button>
                            <button class="btn btn-outline-secondary btn-sm">Review Premiums</button>
                            <button class="btn btn-outline-warning btn-sm">Add Claim</button>
                            <button class="btn btn-outline-dark btn-sm">Contact Customer</button>
                        </div>
                    </div>
                </form>
            </div>
        }
    </div>

    @if (selectedCustomer is not null)
    {
        <div class="section section-policies">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h6 class="mb-0">Policies for @selectedCustomer.FirstName @selectedCustomer.LastName</h6>
                <a href="#">New</a>
            </div>
            <div class="card-row">
                @foreach (var p in policies)
                {
                    <div class="card @(selectedPolicy?.Id == p.Id ? "selected" : "")" @onclick="() => SelectPolicy(p)">
                        <div class="card-body">
                            <h6 class="card-title mb-1">@p.Type</h6>
                            <small>Start: @p.StartDate.ToShortDateString()</small>
                        </div>
                    </div>
                }
            </div>
            @if (selectedPolicy is not null)
            {
                <div class="details-panel">
                    <div class="detail-row"><strong>Type:</strong> @selectedPolicy.Type</div>
                    <div class="detail-row"><strong>Premium:</strong> @selectedPolicy.Premium.ToString("C")</div>
                    <div class="detail-row"><strong>Payment Type:</strong> @selectedPolicy.PaymentType</div>
                    <div class="detail-row"><strong>Start Date:</strong> @selectedPolicy.StartDate.ToShortDateString()</div>
                    <div class="detail-row"><strong>Amount:</strong> @selectedPolicy.PaymentAmount.ToString("C")</div>
                    <div class="detail-row"><strong>Notes:</strong> @selectedPolicy.AdditionalNotes</div>
                </div>
            }
        </div>

        <div class="section section-comm">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h6 class="mb-0">Communications for @selectedCustomer.FirstName @selectedCustomer.LastName</h6>
                <a href="#">New</a>
            </div>
            <div class="card-row">
                @foreach (var cm in communications)
                {
                    <div class="card @(selectedCommunication?.Id == cm.Id ? "selected" : "")" @onclick="() => SelectCommunication(cm)">
                        <div class="card-body">
                            <h6 class="card-title mb-1">@cm.CommunicationType</h6>
                            <small>@cm.CommunicationDate.ToShortDateString()</small>
                        </div>
                    </div>
                }
            </div>
            @if (selectedCommunication is not null)
            {
                <div class="details-panel">
                    <div class="detail-row"><strong>Type:</strong> @selectedCommunication.CommunicationType</div>
                    <div class="detail-row"><strong>Date:</strong> @selectedCommunication.CommunicationDate.ToShortDateString()</div>
                    <div class="detail-row"><strong>Details:</strong> @selectedCommunication.Details</div>
                </div>
            }
        </div>
    }
</main>

<ChatLauncher OnRefreshRequested="ReloadData" />

@code {
    private List<Customer> customers = [];
    private Customer? selectedCustomer;
    private List<Policy> policies = [];
    private Policy? selectedPolicy;
    private List<CommunicationHistoryTable> communications = [];
    private CommunicationHistoryTable? selectedCommunication;

    protected override async Task OnInitializedAsync()
    {
        await ReloadData();
    }

    private async Task ReloadData()
    {
        var previouslySelectedId = selectedCustomer?.Id;

        customers = (await Repo.GetCustomersAsync()).ToList();

        if (previouslySelectedId is not null)
        {
            var match = customers.FirstOrDefault(c => c.Id == previouslySelectedId);
            if (match is not null)
            {
                await SelectCustomer(match);
                return;
            }
        }

        if (customers.Count > 0)
        {
            await SelectCustomer(customers[0]);
        }
    }

    private async Task SelectCustomer(Customer customer)
    {
        selectedCustomer = customer;
        policies = (await Repo.GetPoliciesByCustomerIdAsync(customer.Id)).ToList();
        selectedPolicy = policies.FirstOrDefault();

        communications = (await Repo.GetCommunicationsByCustomerIdAsync(customer.Id)).ToList();
        selectedCommunication = communications.FirstOrDefault();

        await InvokeAsync(StateHasChanged);
    }

    private void SelectPolicy(Policy policy) => selectedPolicy = policy;
    private void SelectCommunication(CommunicationHistoryTable communication) => selectedCommunication = communication;
}
